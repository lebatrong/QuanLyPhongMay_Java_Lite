/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frame;

import Data.DataProvider;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author batro
 */
public class pnlUpdateRoom extends javax.swing.JPanel {

    /**
     * Creates new form pnlUpdateRoom
     */
    
    public static String MaPhong="1";
    public pnlUpdateRoom() {
        initComponents();
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        lblPhongMay = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtNote = new javax.swing.JTextArea();
        lblPC = new javax.swing.JLabel();
        lblRoom = new javax.swing.JLabel();
        chkMouse = new javax.swing.JCheckBox();
        chkCPU = new javax.swing.JCheckBox();
        chkBanPhim = new javax.swing.JCheckBox();
        chkLCD = new javax.swing.JCheckBox();
        btnSave = new javax.swing.JButton();
        lb = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbListPC = new javax.swing.JTable();

        addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                formAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        lblPhongMay.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblPhongMay.setForeground(new java.awt.Color(153, 0, 153));
        lblPhongMay.setText("CẬP NHẬT PHÒNG MÁY ");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(301, 301, 301)
                .addComponent(lblPhongMay)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblPhongMay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(6, 6, 6))
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel1.setText("Danh sách máy lỗi:");

        jPanel5.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel3.setText("Phòng máy:");

        jLabel2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel2.setText("Số máy:");

        jLabel4.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel4.setText("Tình trạng lỗi:");

        jLabel5.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel5.setText("Ghi chú:");

        txtNote.setColumns(20);
        txtNote.setRows(5);
        jScrollPane2.setViewportView(txtNote);

        lblPC.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lblPC.setForeground(new java.awt.Color(102, 0, 204));
        lblPC.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Devices-computer-icon.png"))); // NOI18N
        lblPC.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblPC.setIconTextGap(0);
        lblPC.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        lblRoom.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblRoom.setForeground(new java.awt.Color(153, 0, 102));
        lblRoom.setText("Phòng");

        chkMouse.setText("Chuột");

        chkCPU.setText("CPU");

        chkBanPhim.setText("Bàn phím");

        chkLCD.setText("Màn hình");

        btnSave.setText("Đã khắc phục");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        lb.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lb.setForeground(new java.awt.Color(0, 102, 102));
        lb.setText("Thông tin máy lỗi");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(16, 16, 16)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chkCPU)
                            .addComponent(chkMouse)
                            .addComponent(chkBanPhim)
                            .addComponent(chkLCD))
                        .addContainerGap())
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE)))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(89, 89, 89))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblRoom))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblPC)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(lb)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(lb)
                .addGap(26, 26, 26)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRoom)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(33, 33, 33)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(chkMouse))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkCPU)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkLCD)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkBanPhim)
                .addGap(8, 8, 8)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(btnSave)
                .addContainerGap())
        );

        tbListPC.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT máy", "Chuột", "CPU", "Màn hình", "Bàn phím", "Ghi chú"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbListPC.setColumnSelectionAllowed(true);
        tbListPC.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tbListPC.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tbListPC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbListPCMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbListPC);
        tbListPC.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (tbListPC.getColumnModel().getColumnCount() > 0) {
            tbListPC.getColumnModel().getColumn(0).setMinWidth(60);
            tbListPC.getColumnModel().getColumn(0).setPreferredWidth(60);
            tbListPC.getColumnModel().getColumn(0).setMaxWidth(60);
            tbListPC.getColumnModel().getColumn(1).setMinWidth(70);
            tbListPC.getColumnModel().getColumn(1).setPreferredWidth(70);
            tbListPC.getColumnModel().getColumn(1).setMaxWidth(70);
            tbListPC.getColumnModel().getColumn(2).setMinWidth(70);
            tbListPC.getColumnModel().getColumn(2).setPreferredWidth(70);
            tbListPC.getColumnModel().getColumn(2).setMaxWidth(70);
            tbListPC.getColumnModel().getColumn(3).setMinWidth(70);
            tbListPC.getColumnModel().getColumn(3).setPreferredWidth(70);
            tbListPC.getColumnModel().getColumn(3).setMaxWidth(70);
            tbListPC.getColumnModel().getColumn(4).setMinWidth(70);
            tbListPC.getColumnModel().getColumn(4).setPreferredWidth(70);
            tbListPC.getColumnModel().getColumn(4).setMaxWidth(70);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 659, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void Load_PC()
    {
        try{
            //Clear table
            
            DefaultTableModel reset=(DefaultTableModel)tbListPC.getModel();
            while(reset.getRowCount()>0)
                reset.removeRow(0);
            
            //Fill table
            String select="SELECT * FROM qlpm.maytinh where MAPHONG='"+MaPhong+"';";
            Data.DataProvider dt= new DataProvider();
            ResultSet rs=dt.Get_Data(select);
            DefaultTableModel model= (DefaultTableModel) tbListPC.getModel();
            String [] TinhTrang;
            String chuot,banphim,lcd,cpu;
            String STT="";
            while(rs.next())
            {
                TinhTrang=rs.getString("TINHTRANG").split("_");
                
                // set lại giá trị
                 chuot="";
                 banphim="";
                 lcd="";
                 cpu="";
                
                //Lấy tình trạng
                for(int i=0; i<TinhTrang.length;i++)
                {
                    if(TinhTrang[i].matches("Chuột"))
                        chuot="x";
                    else if(TinhTrang[i].matches("Bàn phím"))
                        banphim="x";
                    else if(TinhTrang[i].matches("Màn hình"))
                        lcd="x";
                    else
                        cpu="x";
                }
                //Lấy stt
                STT="Máy "+rs.getString("MAMAY").substring(5,7);
                //Thêm dữ liệu vào row
                model.addRow(new Object[] {STT,chuot,cpu,lcd,banphim,rs.getString("GHICHU")});
            }
            tbListPC.setModel(model);
        }catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null, "Lỗi dữ liệu");
        }
    }
    
    private void ResetData()
    {
        txtNote.setText("");
        lblPC.setText("");
        chkBanPhim.setSelected(false);
        chkCPU.setSelected(false);
        chkMouse.setSelected(false);
        chkLCD.setSelected(false);
    }
    
    private void formAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_formAncestorAdded
        lblPhongMay.setText("CẬP NHẬT PHÒNG MÁY "+MaPhong);
        lblRoom.setText(MaPhong);
        Load_PC();
    }//GEN-LAST:event_formAncestorAdded

    private void tbListPCMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbListPCMouseClicked
        int row= tbListPC.getSelectedRow();
        //Số thứ tự máy
        lblPC.setText(tbListPC.getValueAt(row, 0).toString());
        //Chuột
        if(tbListPC.getValueAt(row, 1).toString().matches("x"))
            chkMouse.setSelected(true);
        else
            chkMouse.setSelected(false);
        
        //cpu
        if(tbListPC.getValueAt(row, 2).toString().matches("x"))
            chkCPU.setSelected(true);
        else
            chkCPU.setSelected(false);
        //man hình
        if(tbListPC.getValueAt(row, 3).toString().matches("x"))
            chkLCD.setSelected(true);
        else
            chkLCD.setSelected(false);
        //bàn phím
        if(tbListPC.getValueAt(row, 4).toString().matches("x"))
            chkBanPhim.setSelected(true);
        else
            chkBanPhim.setSelected(false);
        //Lấy ghi chú
        txtNote.setText(tbListPC.getValueAt(row, 5).toString());
    }//GEN-LAST:event_tbListPCMouseClicked

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        try{
            String del="DELETE FROM `qlpm`.`maytinh` WHERE MAMAY='"+lblRoom.getText()+"M"+lblPC.getText().substring(4, 6)+"';";
            
            DataProvider dt= new DataProvider();
            if(dt.Exec_Query(del)){
                JOptionPane.showMessageDialog(null,"Cập nhật thành công!");
                Load_PC();
                ResetData();
            }else
                JOptionPane.showMessageDialog(null,"Lỗi cập nhật!");
        }catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null,"Lỗi kết nối!");
        }
    }//GEN-LAST:event_btnSaveActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JCheckBox chkBanPhim;
    private javax.swing.JCheckBox chkCPU;
    private javax.swing.JCheckBox chkLCD;
    private javax.swing.JCheckBox chkMouse;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lb;
    private javax.swing.JLabel lblPC;
    private javax.swing.JLabel lblPhongMay;
    private javax.swing.JLabel lblRoom;
    private javax.swing.JTable tbListPC;
    private javax.swing.JTextArea txtNote;
    // End of variables declaration//GEN-END:variables
}
